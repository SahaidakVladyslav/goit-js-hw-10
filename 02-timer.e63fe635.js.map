{"mappings":"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","sources":["<anon>","src/js/02-timer.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire7bc7\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire7bc7\"] = parcelRequire;\n}\n\nvar $7Y9D8 = parcelRequire(\"7Y9D8\");\n\nvar $fbklV = parcelRequire(\"fbklV\");\n\nparcelRequire(\"i37YJ\");\nconst $40d383fb392a7037$var$date = new Date();\nconst $40d383fb392a7037$var$inputEl = document.querySelector(\"#datetime-picker\");\nconst $40d383fb392a7037$var$btnStart = document.querySelector(\"[data-start]\");\nconst $40d383fb392a7037$var$inputDays = document.querySelector(\"[data-days]\");\nconst $40d383fb392a7037$var$inputHours = document.querySelector(\"[data-hours]\");\nconst $40d383fb392a7037$var$inputMinutes = document.querySelector(\"[data-minutes]\");\nconst $40d383fb392a7037$var$inputSeconds = document.querySelector(\"[data-seconds]\");\nlet $40d383fb392a7037$var$timeUpdateTime = null;\nconst $40d383fb392a7037$var$todayDate = new Date();\nconsole.log();\nconst $40d383fb392a7037$var$btnNone = ()=>{\n    $40d383fb392a7037$var$btnStart.style.opacity = 0.5;\n    $40d383fb392a7037$var$btnStart.style.pointerEvents = \"none\";\n};\nconst $40d383fb392a7037$var$btnAuto = ()=>{\n    $40d383fb392a7037$var$btnStart.style.pointerEvents = \"auto\";\n    $40d383fb392a7037$var$btnStart.style.opacity = 1;\n};\nconst $40d383fb392a7037$var$inputTextContentValue = (dateFormat)=>{\n    $40d383fb392a7037$var$inputDays.textContent = `${parseFloat(dateFormat.days.toFixed(1)) - 19655}`;\n    $40d383fb392a7037$var$inputHours.textContent = `${parseFloat(dateFormat.hours.toFixed(1)) - 17}`;\n    $40d383fb392a7037$var$inputMinutes.textContent = `${parseFloat(dateFormat.minutes.toFixed(1)) - $40d383fb392a7037$var$todayDate.getMinutes()}`;\n    $40d383fb392a7037$var$inputSeconds.textContent = `${parseFloat(dateFormat.seconds.toFixed(1))}`;\n};\nconst $40d383fb392a7037$var$emptyTextContent = ()=>{\n    $40d383fb392a7037$var$inputDays.textContent = `0`;\n    $40d383fb392a7037$var$inputHours.textContent = `0`;\n    $40d383fb392a7037$var$inputMinutes.textContent = `0`;\n    $40d383fb392a7037$var$inputSeconds.textContent = `0`;\n};\nfunction $40d383fb392a7037$var$ifShuldTimerStart() {\n    if (+$40d383fb392a7037$var$inputSeconds.textContent >= 0) {\n        if (+$40d383fb392a7037$var$inputMinutes.textContent >= 0) {\n            if (+$40d383fb392a7037$var$inputHours.textContent >= 0) {\n                if (+$40d383fb392a7037$var$inputDays.textContent >= 0) return $40d383fb392a7037$var$btnAuto();\n            }\n        }\n    }\n}\nfunction $40d383fb392a7037$var$padStart() {\n    let totalSeconds = +$40d383fb392a7037$var$inputDays.textContent * 86400 + +$40d383fb392a7037$var$inputHours.textContent * 3600 + +$40d383fb392a7037$var$inputMinutes.textContent * 60 + +$40d383fb392a7037$var$inputSeconds.textContent;\n    totalSeconds -= 1;\n    if (totalSeconds < 0) {\n        $40d383fb392a7037$var$emptyTextContent();\n        clearInterval($40d383fb392a7037$var$timeUpdateTime);\n    } else {\n        const days = Math.floor(totalSeconds / 86400);\n        const hours = Math.floor(totalSeconds % 86400 / 3600);\n        const minutes = Math.floor(totalSeconds % 3600 / 60);\n        const seconds = totalSeconds % 60;\n        $40d383fb392a7037$var$inputDays.textContent = days;\n        $40d383fb392a7037$var$inputHours.textContent = hours;\n        $40d383fb392a7037$var$inputMinutes.textContent = minutes;\n        $40d383fb392a7037$var$inputSeconds.textContent = seconds;\n    }\n}\nfunction $40d383fb392a7037$var$convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor(ms % day / hour);\n    // Remaining minutes\n    const minutes = Math.floor(ms % day % hour / minute);\n    // Remaining seconds\n    const seconds = Math.floor(ms % day % hour % minute / second);\n    return {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n    };\n}\n$40d383fb392a7037$var$btnNone();\n(0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Report.init({\n    width: \"280px\",\n    position: \"right-top\",\n    distance: \"10px\",\n    borderRadius: \"50px\",\n    backOverlayColor: \"rgba(1,2,3,4.9)\",\n    svgSize: \"80px\",\n    backgroundColor: \"#83f1ea\"\n});\nconst $40d383fb392a7037$var$options = {\n    enableTime: true,\n    enableSeconds: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    theme: \"dark\",\n    altInput: true,\n    altFormat: \"F j, Y\",\n    dateFormat: \"Y-m-d\",\n    maxDate: new Date().fp_incr(22),\n    disable: [\n        function(date) {\n            return date.getDay() === 0 || date.getDay() === 6;\n        }\n    ],\n    locale: {\n        \"firstDayOfWeek\": 1\n    },\n    onClose (selectedDates) {\n        console.log(selectedDates[0]);\n        clearInterval($40d383fb392a7037$var$timeUpdateTime);\n        if (selectedDates[0].getTime() <= $40d383fb392a7037$var$todayDate.getTime()) {\n            (0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Report.failure(\"ERROR\", \"Please choose a date in the future\", \"Close\");\n            $40d383fb392a7037$var$emptyTextContent();\n            return $40d383fb392a7037$var$btnNone();\n        }\n        const objectDate = $40d383fb392a7037$var$convertMs(selectedDates[0]);\n        $40d383fb392a7037$var$inputTextContentValue(objectDate);\n        $40d383fb392a7037$var$ifShuldTimerStart();\n    }\n};\n(0, $fbklV.default)($40d383fb392a7037$var$inputEl, $40d383fb392a7037$var$options);\n$40d383fb392a7037$var$btnStart.addEventListener(\"click\", ()=>{\n    $40d383fb392a7037$var$timeUpdateTime = setInterval($40d383fb392a7037$var$padStart, 1000);\n    $40d383fb392a7037$var$btnNone();\n});\n\n\n//# sourceMappingURL=02-timer.e63fe635.js.map\n","import Notiflix from 'notiflix';\n\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nconst date = new Date();\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('[data-start]')\nconst inputDays = document.querySelector('[data-days]')\nconst inputHours = document.querySelector('[data-hours]')\nconst inputMinutes = document.querySelector('[data-minutes]')\nconst inputSeconds = document.querySelector('[data-seconds]')\nlet timeUpdateTime = null;\n\nconst todayDate = new Date()\nconsole.log()\nconst btnNone = () => {\n    btnStart.style.opacity = 0.5;\n    btnStart.style.pointerEvents = 'none';\n}\nconst btnAuto = () => {\n    btnStart.style.pointerEvents = 'auto';\n    btnStart.style.opacity = 1;\n}\nconst inputTextContentValue = (dateFormat) => {\n    inputDays.textContent = `${parseFloat((dateFormat.days).toFixed(1)) - 19655}`\n    inputHours.textContent = `${parseFloat((dateFormat.hours).toFixed(1)) - 17}`\n    inputMinutes.textContent = `${parseFloat((dateFormat.minutes).toFixed(1)) - todayDate.getMinutes()}`\n    inputSeconds.textContent = `${parseFloat((dateFormat.seconds).toFixed(1))}`\n}\nconst emptyTextContent = () => {\n    inputDays.textContent = `0`\n    inputHours.textContent = `0`\n    inputMinutes.textContent = `0`\n    inputSeconds.textContent = `0`\n}\nfunction ifShuldTimerStart() {\n    if (+inputSeconds.textContent >= 0) {\n        if (+inputMinutes.textContent >= 0) {\n            if (+inputHours.textContent >= 0) {\n                if (+inputDays.textContent >= 0) {\n                    return btnAuto()\n                }\n            }\n        }\n    }\n\n\n}\nfunction padStart() {\n    let totalSeconds = +inputDays.textContent * 24 * 60 * 60 +\n        +inputHours.textContent * 60 * 60 +\n        +inputMinutes.textContent * 60 +\n        +inputSeconds.textContent;\n\n    totalSeconds -= 1;\n\n    if (totalSeconds < 0) {\n        emptyTextContent();\n        clearInterval(timeUpdateTime);\n    } else {\n        const days = Math.floor(totalSeconds / (24 * 60 * 60));\n        const hours = Math.floor((totalSeconds % (24 * 60 * 60)) / (60 * 60));\n        const minutes = Math.floor((totalSeconds % (60 * 60)) / 60);\n        const seconds = totalSeconds % 60;\n\n        inputDays.textContent = days;\n        inputHours.textContent = hours;\n        inputMinutes.textContent = minutes;\n        inputSeconds.textContent = seconds;\n    }\n}\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nbtnNone()\n\n\n\nNotiflix.Report.init({\n    width: '280px',\n    position: 'right-top', // не можу ніяк зрозумічит чому воно не працює\n    distance: '10px',\n    borderRadius: '50px',\n    backOverlayColor: 'rgba(1,2,3,4.9)',\n    svgSize: '80px',\n    backgroundColor: '#83f1ea',\n});\nconst options = {\n    enableTime: true,\n    enableSeconds: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    theme: \"dark\", // не можу ніяк зрозумічит чому воно не працює\n    altInput: true,\n    altFormat: \"F j, Y\",\n    dateFormat: \"Y-m-d\",\n    maxDate: new Date().fp_incr(22),\n    disable: [\n        function (date) {\n            return (date.getDay() === 0 || date.getDay() === 6);\n        }\n    ],\n    locale: {\n        \"firstDayOfWeek\": 1\n    },\n    onClose(selectedDates) {\n        console.log(selectedDates[0]);\n        clearInterval(timeUpdateTime);\n        if (selectedDates[0].getTime() <= todayDate.getTime()) {\n            Notiflix.Report.failure('ERROR', 'Please choose a date in the future', 'Close');\n            emptyTextContent()\n            return btnNone()\n        }\n\n        const objectDate = convertMs(selectedDates[0])\n        inputTextContentValue(objectDate)\n        ifShuldTimerStart()\n\n    },\n};\nflatpickr(inputEl, options);\n\n\nbtnStart.addEventListener('click', () => {\n    timeUpdateTime = setInterval(padStart, 1000);\n    btnNone()\n})\n\n"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7Y9D8","$fbklV","$40d383fb392a7037$var$inputEl","document","querySelector","$40d383fb392a7037$var$btnStart","$40d383fb392a7037$var$inputDays","$40d383fb392a7037$var$inputHours","$40d383fb392a7037$var$inputMinutes","$40d383fb392a7037$var$inputSeconds","$40d383fb392a7037$var$timeUpdateTime","$40d383fb392a7037$var$todayDate","Date","console","log","$40d383fb392a7037$var$btnNone","style","opacity","pointerEvents","$40d383fb392a7037$var$btnAuto","$40d383fb392a7037$var$inputTextContentValue","dateFormat","textContent","parseFloat","days","toFixed","hours","minutes","getMinutes","seconds","$40d383fb392a7037$var$emptyTextContent","$40d383fb392a7037$var$padStart","totalSeconds","clearInterval","Math","floor","Report","width","position","distance","borderRadius","backOverlayColor","svgSize","backgroundColor","$40d383fb392a7037$var$options","enableTime","enableSeconds","time_24hr","defaultDate","minuteIncrement","theme","altInput","altFormat","maxDate","fp_incr","disable","date","getDay","locale","onClose","selectedDates","getTime","failure","objectDate","$40d383fb392a7037$var$convertMs","ms","day","hour","minute","second","addEventListener","setInterval"],"version":3,"file":"02-timer.e63fe635.js.map"}