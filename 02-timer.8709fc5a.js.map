{"mappings":"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","sources":["<anon>","src/js/02-timer.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequireabb0\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequireabb0\"] = parcelRequire;\n}\n\nvar $7Y9D8 = parcelRequire(\"7Y9D8\");\n\nvar $fbklV = parcelRequire(\"fbklV\");\n\nparcelRequire(\"i37YJ\");\nconst $40d383fb392a7037$var$inputEl = document.querySelector(\"#datetime-picker\");\nconst $40d383fb392a7037$var$btnStart = document.querySelector(\"[data-start]\");\nconst $40d383fb392a7037$var$inputDays = document.querySelector(\"[data-days]\");\nconst $40d383fb392a7037$var$inputHours = document.querySelector(\"[data-hours]\");\nconst $40d383fb392a7037$var$inputMinutes = document.querySelector(\"[data-minutes]\");\nconst $40d383fb392a7037$var$inputSeconds = document.querySelector(\"[data-seconds]\");\nlet $40d383fb392a7037$var$timeUpdateTime = null;\nlet $40d383fb392a7037$var$valueDato;\nlet $40d383fb392a7037$var$proDato;\nlet $40d383fb392a7037$var$milliseconds;\nconst $40d383fb392a7037$var$btnNone = ()=>{\n    $40d383fb392a7037$var$btnStart.style.opacity = 0.5;\n    $40d383fb392a7037$var$btnStart.style.pointerEvents = \"none\";\n};\nconst $40d383fb392a7037$var$btnAuto = ()=>{\n    $40d383fb392a7037$var$btnStart.style.pointerEvents = \"auto\";\n    $40d383fb392a7037$var$btnStart.style.opacity = 1;\n};\nconst $40d383fb392a7037$var$emptyTextContent = ()=>{\n    $40d383fb392a7037$var$inputDays.textContent = \"00\";\n    $40d383fb392a7037$var$inputHours.textContent = \"00\";\n    $40d383fb392a7037$var$inputMinutes.textContent = \"00\";\n    $40d383fb392a7037$var$inputSeconds.textContent = \"00\";\n};\nfunction $40d383fb392a7037$var$convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor(ms % day / hour);\n    // Remaining minutes\n    const minutes = Math.floor(ms % day % hour / minute);\n    // Remaining seconds\n    const seconds = Math.floor(ms % day % hour % minute / second);\n    return {\n        days: days,\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n    };\n}\nconst $40d383fb392a7037$var$padStartFunction = ({ days: days, hours: hours, minutes: minutes, seconds: seconds })=>{\n    const proDays = days.toString().padStart(2, 0);\n    const proHours = hours.toString().padStart(2, 0);\n    const proMinutes = minutes.toString().padStart(2, 0);\n    const proSeconds = seconds.toString().padStart(2, 0);\n    return {\n        proDays: proDays,\n        proHours: proHours,\n        proMinutes: proMinutes,\n        proSeconds: proSeconds\n    };\n};\nfunction $40d383fb392a7037$var$timerTextContent() {\n    $40d383fb392a7037$var$timeUpdateTime = setInterval(()=>{\n        $40d383fb392a7037$var$milliseconds -= 1000;\n        if ($40d383fb392a7037$var$milliseconds < 1000) clearInterval($40d383fb392a7037$var$timeUpdateTime);\n        $40d383fb392a7037$var$valueDato = $40d383fb392a7037$var$convertMs($40d383fb392a7037$var$milliseconds);\n        $40d383fb392a7037$var$proDato = $40d383fb392a7037$var$padStartFunction($40d383fb392a7037$var$valueDato);\n        $40d383fb392a7037$var$inputDays.textContent = `${$40d383fb392a7037$var$proDato.proDays}`;\n        $40d383fb392a7037$var$inputHours.textContent = `${$40d383fb392a7037$var$proDato.proHours}`;\n        $40d383fb392a7037$var$inputMinutes.textContent = `${$40d383fb392a7037$var$proDato.proMinutes}`;\n        $40d383fb392a7037$var$inputSeconds.textContent = `${$40d383fb392a7037$var$proDato.proSeconds}`;\n    }, 1000);\n}\n$40d383fb392a7037$var$btnNone();\nconst $40d383fb392a7037$var$options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose (selectedDates) {\n        clearInterval($40d383fb392a7037$var$timeUpdateTime);\n        if (selectedDates[0].getTime() <= $40d383fb392a7037$var$options.defaultDate.getTime()) {\n            (0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Notify.failure(\"Please choose a date in the future\");\n            $40d383fb392a7037$var$emptyTextContent();\n            $40d383fb392a7037$var$btnNone();\n        } else {\n            $40d383fb392a7037$var$btnAuto();\n            $40d383fb392a7037$var$milliseconds = +selectedDates[0].getTime() - +$40d383fb392a7037$var$options.defaultDate.getTime();\n            $40d383fb392a7037$var$valueDato = $40d383fb392a7037$var$convertMs($40d383fb392a7037$var$milliseconds);\n            $40d383fb392a7037$var$proDato = $40d383fb392a7037$var$padStartFunction($40d383fb392a7037$var$valueDato);\n            $40d383fb392a7037$var$inputDays.textContent = `${$40d383fb392a7037$var$proDato.proDays}`;\n            $40d383fb392a7037$var$inputHours.textContent = `${$40d383fb392a7037$var$proDato.proHours}`;\n            $40d383fb392a7037$var$inputMinutes.textContent = `${$40d383fb392a7037$var$proDato.proMinutes}`;\n            $40d383fb392a7037$var$inputSeconds.textContent = `${$40d383fb392a7037$var$proDato.proSeconds}`;\n        }\n    }\n};\n(0, $fbklV.default)($40d383fb392a7037$var$inputEl, $40d383fb392a7037$var$options);\n$40d383fb392a7037$var$btnStart.addEventListener(\"click\", ()=>{\n    $40d383fb392a7037$var$btnNone();\n    $40d383fb392a7037$var$timerTextContent();\n});\n\n\n//# sourceMappingURL=02-timer.8709fc5a.js.map\n","import Notiflix from 'notiflix';\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nconst inputEl = document.querySelector('#datetime-picker');\nconst btnStart = document.querySelector('[data-start]');\nconst inputDays = document.querySelector('[data-days]');\nconst inputHours = document.querySelector('[data-hours]');\nconst inputMinutes = document.querySelector('[data-minutes]');\nconst inputSeconds = document.querySelector('[data-seconds]');\nlet timeUpdateTime = null;\nlet valueDato;\nlet proDato;\nlet milliseconds;\nconst btnNone = () => {\n    btnStart.style.opacity = 0.5;\n    btnStart.style.pointerEvents = 'none';\n};\n\nconst btnAuto = () => {\n    btnStart.style.pointerEvents = 'auto';\n    btnStart.style.opacity = 1;\n};\n\nconst emptyTextContent = () => {\n    inputDays.textContent = '00';\n    inputHours.textContent = '00';\n    inputMinutes.textContent = '00';\n    inputSeconds.textContent = '00';\n};\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nconst padStartFunction = ({ days, hours, minutes, seconds }) => {\n    const proDays = days.toString().padStart(2, 0)\n    const proHours = hours.toString().padStart(2, 0)\n    const proMinutes = minutes.toString().padStart(2, 0)\n    const proSeconds = seconds.toString().padStart(2, 0)\n    return { proDays, proHours, proMinutes, proSeconds }\n}\n\nfunction timerTextContent() {\n    timeUpdateTime = setInterval(() => {\n        milliseconds -= 1000\n        if (milliseconds < 1000) {\n            clearInterval(timeUpdateTime)\n        }\n        valueDato = convertMs(milliseconds)\n        proDato = padStartFunction(valueDato)\n\n        inputDays.textContent = `${proDato.proDays}`;\n        inputHours.textContent = `${proDato.proHours}`;\n        inputMinutes.textContent = `${proDato.proMinutes}`;\n        inputSeconds.textContent = `${proDato.proSeconds}`;\n    }, 1000)\n}\n\nbtnNone();\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        clearInterval(timeUpdateTime);\n        if (selectedDates[0].getTime() <= options.defaultDate.getTime()) {\n            Notiflix.Notify.failure('Please choose a date in the future');\n            emptyTextContent()\n            btnNone();\n        } else {\n            btnAuto()\n            milliseconds = +selectedDates[0].getTime() - +options.defaultDate.getTime()\n            valueDato = convertMs(milliseconds)\n            proDato = padStartFunction(valueDato)\n\n            inputDays.textContent = `${proDato.proDays}`;\n            inputHours.textContent = `${proDato.proHours}`;\n            inputMinutes.textContent = `${proDato.proMinutes}`;\n            inputSeconds.textContent = `${proDato.proSeconds}`;\n        }\n    },\n};\n\nflatpickr(inputEl, options);\n\nbtnStart.addEventListener('click', () => {\n    btnNone()\n    timerTextContent()\n});\n"],"names":["$40d383fb392a7037$var$proDato","$40d383fb392a7037$var$milliseconds","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7Y9D8","$fbklV","$40d383fb392a7037$var$inputEl","document","querySelector","$40d383fb392a7037$var$btnStart","$40d383fb392a7037$var$inputDays","$40d383fb392a7037$var$inputHours","$40d383fb392a7037$var$inputMinutes","$40d383fb392a7037$var$inputSeconds","$40d383fb392a7037$var$timeUpdateTime","$40d383fb392a7037$var$btnNone","style","opacity","pointerEvents","$40d383fb392a7037$var$btnAuto","$40d383fb392a7037$var$emptyTextContent","textContent","$40d383fb392a7037$var$convertMs","ms","day","hour","days","Math","floor","hours","minute","minutes","second","seconds","$40d383fb392a7037$var$padStartFunction","proDays","toString","padStart","proHours","proMinutes","proSeconds","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","clearInterval","getTime","a","__esModule","default","Notify","failure","addEventListener","setInterval"],"version":3,"file":"02-timer.8709fc5a.js.map"}