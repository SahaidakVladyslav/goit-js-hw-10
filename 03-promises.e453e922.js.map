{"mappings":"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","sources":["<anon>","src/js/03-promises.js","node_modules/notiflix/build/notiflix-confirm-aio.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire7bc7\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire7bc7\"] = parcelRequire;\n}\n\nvar $7Y9D8 = parcelRequire(\"7Y9D8\");\nparcelRequire(\"fbklV\");\nparcelRequire(\"i37YJ\");\nvar $8371a8bef07b3531$exports = {};\n/*\n* Notiflix Confirm AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.6\n* Author: Furkan (https://github.com/furcan)\n* Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/ /* global define */ (function(root, factory) {\n    if (typeof define === \"function\" && define.amd) define([], function() {\n        return factory(root);\n    });\n    else if (typeof $8371a8bef07b3531$exports === \"object\") $8371a8bef07b3531$exports = factory(root);\n    else root.Notiflix = factory(root);\n})(typeof $parcel$global !== \"undefined\" ? $parcel$global : typeof window !== \"undefined\" ? window : $8371a8bef07b3531$exports, function(window1) {\n    \"use strict\";\n    // COMMON: SSR check: begin\n    if (typeof window1 === \"undefined\" && typeof window1.document === \"undefined\") return false;\n    // COMMON: SSR check: end\n    // COMMON: Variables: begin\n    var notiflixNamespace = \"Notiflix\";\n    var notiflixConsoleDocs = \"\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation\";\n    var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n    // COMMON: Variables: end\n    // CONFIRM: Default Settings: begin\n    var typesConfirm = {\n        Show: \"Show\",\n        Ask: \"Ask\",\n        Prompt: \"Prompt\"\n    };\n    var newConfirmSettings;\n    var confirmSettings = {\n        ID: \"NotiflixConfirmWrap\",\n        className: \"notiflix-confirm\",\n        width: \"300px\",\n        zindex: 4003,\n        position: \"center\",\n        distance: \"10px\",\n        backgroundColor: \"#f8f8f8\",\n        borderRadius: \"25px\",\n        backOverlay: true,\n        backOverlayColor: \"rgba(0,0,0,0.5)\",\n        rtl: false,\n        fontFamily: \"Quicksand\",\n        cssAnimation: true,\n        cssAnimationDuration: 300,\n        cssAnimationStyle: \"fade\",\n        plainText: true,\n        titleColor: \"#32c682\",\n        titleFontSize: \"16px\",\n        titleMaxLength: 34,\n        messageColor: \"#1e1e1e\",\n        messageFontSize: \"14px\",\n        messageMaxLength: 110,\n        buttonsFontSize: \"15px\",\n        buttonsMaxLength: 34,\n        okButtonColor: \"#f8f8f8\",\n        okButtonBackground: \"#32c682\",\n        cancelButtonColor: \"#f8f8f8\",\n        cancelButtonBackground: \"#a9a9a9\"\n    };\n    // CONFIRM: Default Settings: end\n    // COMMON: Console Error: begin\n    var commonConsoleError = function(message) {\n        return console.error(\"%c \" + notiflixNamespace + \" Error \", \"padding:2px;border-radius:20px;color:#fff;background:#ff5549\", \"\\n\" + message + notiflixConsoleDocs);\n    };\n    // COMMON: Console Error: end\n    // COMMON: Check Head or Body: begin\n    var commonCheckHeadOrBody = function(element) {\n        if (!element) element = \"head\";\n        if (window1.document[element] === null) {\n            commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\n            return false;\n        }\n        return true;\n    };\n    // COMMON: Check Head or Body: end\n    // COMMON: Set Internal CSS Codes: begin\n    var commonSetInternalCSSCodes = function(getInternalCSSCodes, styleElementId) {\n        // check doc head\n        if (!commonCheckHeadOrBody(\"head\")) return false;\n        // internal css\n        if (getInternalCSSCodes() !== null && !window1.document.getElementById(styleElementId)) {\n            var internalCSS = window1.document.createElement(\"style\");\n            internalCSS.id = styleElementId;\n            internalCSS.innerHTML = getInternalCSSCodes();\n            window1.document.head.appendChild(internalCSS);\n        }\n    };\n    // COMMON: Set Internal CSS Codes: end\n    // COMMON: Extend Options: begin\n    var commonExtendOptions = function() {\n        // variables\n        var extended = {};\n        var deep = false;\n        var i = 0;\n        // check if a deep merge\n        if (Object.prototype.toString.call(arguments[0]) === \"[object Boolean]\") {\n            deep = arguments[0];\n            i++;\n        }\n        // merge the object into the extended object\n        var merge = function(obj) {\n            for(var prop in obj)if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                // if property is an object, merge properties\n                if (deep && Object.prototype.toString.call(obj[prop]) === \"[object Object]\") extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\n                else extended[prop] = obj[prop];\n            }\n        };\n        // loop through each object and conduct a merge\n        for(; i < arguments.length; i++)merge(arguments[i]);\n        return extended;\n    };\n    // COMMON: Extend Options: end\n    // COMMON: Get Plaintext: begin\n    var commonGetPlaintext = function(html) {\n        var htmlPool = window1.document.createElement(\"div\");\n        htmlPool.innerHTML = html;\n        return htmlPool.textContent || htmlPool.innerText || \"\";\n    };\n    // COMMON: Get Plaintext: end\n    // CONFIRM: Get Internal CSS Codes: begin\n    var confirmGetInternalCSSCodes = function() {\n        var confirmCSS = '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\"-overlay\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\"-content\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\"-content\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';\n        return confirmCSS || null;\n    };\n    // CONFIRM: Get Internal CSS Codes: end\n    // CONFIRM: Create: begin\n    var confirmCreate = function(confirmType, title, messageOrQuestion, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        // check doc body\n        if (!commonCheckHeadOrBody(\"body\")) return false;\n        // if not initialized pretend like init\n        if (!newConfirmSettings) Notiflix.Confirm.init({});\n        // create a backup for new settings\n        var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {});\n        // check the \"options\": begin\n        if (typeof options === \"object\" && !Array.isArray(options)) // extend new settings with the new options\n        newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\n        // check the \"options\": end\n        // check the arguments: begin\n        if (typeof title !== \"string\") title = \"Notiflix Confirm\";\n        if (typeof messageOrQuestion !== \"string\") messageOrQuestion = \"Do you agree with me?\";\n        if (typeof okButtonText !== \"string\") okButtonText = \"Yes\";\n        if (typeof cancelButtonText !== \"string\") cancelButtonText = \"No\";\n        if (typeof okButtonCallback !== \"function\") okButtonCallback = undefined;\n        if (typeof cancelButtonCallback !== \"function\") cancelButtonCallback = undefined;\n        // check the arguments: end\n        // if plainText is true => HTML tags not allowed: begin\n        if (newConfirmSettings.plainText) {\n            title = commonGetPlaintext(title);\n            messageOrQuestion = commonGetPlaintext(messageOrQuestion);\n            okButtonText = commonGetPlaintext(okButtonText);\n            cancelButtonText = commonGetPlaintext(cancelButtonText);\n        }\n        // if plainText is true => HTML tags not allowed: end\n        // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\n        if (!newConfirmSettings.plainText) {\n            if (title.length > newConfirmSettings.titleMaxLength) {\n                title = \"Possible HTML Tags Error\";\n                messageOrQuestion = 'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\n                okButtonText = \"Okay\";\n                cancelButtonText = \"...\";\n            }\n            if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n                title = \"Possible HTML Tags Error\";\n                messageOrQuestion = 'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\n                okButtonText = \"Okay\";\n                cancelButtonText = \"...\";\n            }\n            if ((okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength) {\n                title = \"Possible HTML Tags Error\";\n                messageOrQuestion = 'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\n                okButtonText = \"Okay\";\n                cancelButtonText = \"...\";\n            }\n        }\n        // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\n        // max length: begin\n        if (title.length > newConfirmSettings.titleMaxLength) title = title.substring(0, newConfirmSettings.titleMaxLength) + \"...\";\n        if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) messageOrQuestion = messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + \"...\";\n        if (okButtonText.length > newConfirmSettings.buttonsMaxLength) okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + \"...\";\n        if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) cancelButtonText = cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + \"...\";\n        // max length: end\n        // if cssAnimaion is false => duration: begin\n        if (!newConfirmSettings.cssAnimation) newConfirmSettings.cssAnimationDuration = 0;\n        // if cssAnimaion is false => duration: end\n        // confirm wrap: begin\n        var ntflxConfirmWrap = window1.document.createElement(\"div\");\n        ntflxConfirmWrap.id = confirmSettings.ID;\n        ntflxConfirmWrap.className = newConfirmSettings.className + (newConfirmSettings.cssAnimation ? \" nx-with-animation nx-\" + newConfirmSettings.cssAnimationStyle : \"\");\n        ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\n        ntflxConfirmWrap.style.padding = newConfirmSettings.distance;\n        // rtl: begin\n        if (newConfirmSettings.rtl) {\n            ntflxConfirmWrap.setAttribute(\"dir\", \"rtl\");\n            ntflxConfirmWrap.classList.add(\"nx-rtl-on\");\n        }\n        // rtl: end\n        // position: begin\n        var confirmPosition = typeof newConfirmSettings.position === \"string\" ? newConfirmSettings.position.trim() : \"center\";\n        ntflxConfirmWrap.classList.add(\"nx-position-\" + confirmPosition);\n        // position: end\n        // font-family\n        ntflxConfirmWrap.style.fontFamily = '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily;\n        // if background overlay is true: begin\n        var confirmOverlay = \"\";\n        if (newConfirmSettings.backOverlay) confirmOverlay = '<div class=\"' + newConfirmSettings.className + \"-overlay\" + (newConfirmSettings.cssAnimation ? \" nx-with-animation\" : \"\") + '\" style=\"background:' + newConfirmSettings.backOverlayColor + \";animation-duration:\" + newConfirmSettings.cssAnimationDuration + 'ms;\"></div>';\n        // if background overlay is true: end\n        // if have a callback => add cancel button: begin\n        var cancelButtonHTML = \"\";\n        if (typeof okButtonCallback === \"function\") cancelButtonHTML = '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' + newConfirmSettings.cancelButtonColor + \";background:\" + newConfirmSettings.cancelButtonBackground + \";font-size:\" + newConfirmSettings.buttonsFontSize + ';\">' + cancelButtonText + \"</a>\";\n        // if have a callback => add cancel button: end\n        // check the validation module: begin\n        var setValidationInput = \"\";\n        var theExpectedAnswer = null;\n        var theClientAnswer = undefined;\n        if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\n            theExpectedAnswer = answer || \"\";\n            var inputMaxLength = confirmType === typesConfirm.Ask ? Math.ceil(theExpectedAnswer.length * 1.5) : theExpectedAnswer.length > 200 ? Math.ceil(theExpectedAnswer.length * 1.5) : 250;\n            var inputDefaultValueAttr = confirmType === typesConfirm.Prompt ? 'value=\"' + theExpectedAnswer + '\"' : \"\";\n            setValidationInput = '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' + inputDefaultValueAttr + ' maxlength=\"' + inputMaxLength + '\" style=\"font-size:' + newConfirmSettings.messageFontSize + \";border-radius: \" + newConfirmSettings.borderRadius + ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\n        }\n        // check the validation module: end\n        // confirm wrap content: begin\n        ntflxConfirmWrap.innerHTML = confirmOverlay + '<div class=\"' + newConfirmSettings.className + '-content\" style=\"width:' + newConfirmSettings.width + \"; background:\" + newConfirmSettings.backgroundColor + \"; animation-duration:\" + newConfirmSettings.cssAnimationDuration + \"ms; border-radius: \" + newConfirmSettings.borderRadius + ';\">' + '<div class=\"' + newConfirmSettings.className + '-head\">' + '<h5 style=\"color:' + newConfirmSettings.titleColor + \";font-size:\" + newConfirmSettings.titleFontSize + ';\">' + title + \"</h5>\" + '<div style=\"color:' + newConfirmSettings.messageColor + \";font-size:\" + newConfirmSettings.messageFontSize + ';\">' + messageOrQuestion + setValidationInput + \"</div>\" + \"</div>\" + '<div class=\"' + newConfirmSettings.className + '-buttons\">' + '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' + (typeof okButtonCallback === \"function\" ? \"\" : \" nx-full\") + '\" style=\"color:' + newConfirmSettings.okButtonColor + \";background:\" + newConfirmSettings.okButtonBackground + \";font-size:\" + newConfirmSettings.buttonsFontSize + ';\">' + okButtonText + \"</a>\" + cancelButtonHTML + \"</div>\" + \"</div>\";\n        // confirm wrap content: end\n        // confirm wrap: end\n        // if there is no confirm box: begin\n        if (!window1.document.getElementById(ntflxConfirmWrap.id)) {\n            window1.document.body.appendChild(ntflxConfirmWrap);\n            // buttons && input listener: begin\n            var confirmCloseWrap = window1.document.getElementById(ntflxConfirmWrap.id);\n            var okButton = window1.document.getElementById(\"NXConfirmButtonOk\");\n            // validation input listener: begin\n            var validationInput = window1.document.getElementById(\"NXConfirmValidationInput\");\n            if (validationInput) {\n                validationInput.focus();\n                validationInput.setSelectionRange(0, (validationInput.value || \"\").length);\n                validationInput.addEventListener(\"keyup\", function(event) {\n                    var thisValue = event.target.value;\n                    if (confirmType === typesConfirm.Ask && thisValue !== theExpectedAnswer) {\n                        event.preventDefault();\n                        validationInput.classList.add(\"nx-validation-failure\");\n                        validationInput.classList.remove(\"nx-validation-success\");\n                    } else {\n                        if (confirmType === typesConfirm.Ask) {\n                            validationInput.classList.remove(\"nx-validation-failure\");\n                            validationInput.classList.add(\"nx-validation-success\");\n                        }\n                        var isEnter = (event.key || \"\").toLocaleLowerCase(\"en\") === \"enter\" || event.keyCode === 13;\n                        if (isEnter) okButton.dispatchEvent(new Event(\"click\"));\n                    }\n                });\n            }\n            // validation input listener: end\n            // ok button listener: begin\n            okButton.addEventListener(\"click\", function(event) {\n                // check the answer if the type is \"Ask\": begin\n                if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\n                    var inputValue = (validationInput.value || \"\").toString();\n                    if (inputValue !== theExpectedAnswer) {\n                        validationInput.focus();\n                        validationInput.classList.add(\"nx-validation-failure\");\n                        event.stopPropagation();\n                        event.preventDefault();\n                        event.returnValue = false;\n                        event.cancelBubble = true;\n                        return false;\n                    } else validationInput.classList.remove(\"nx-validation-failure\");\n                }\n                // check the answer if the type is \"Ask\": end\n                // if ok callback && if ok callback is a function\n                if (typeof okButtonCallback === \"function\") {\n                    if (confirmType === typesConfirm.Prompt && validationInput) theClientAnswer = validationInput.value || \"\";\n                    okButtonCallback(theClientAnswer);\n                }\n                confirmCloseWrap.classList.add(\"nx-remove\");\n                var timeout = setTimeout(function() {\n                    if (confirmCloseWrap.parentNode !== null) {\n                        confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n                        clearTimeout(timeout);\n                    }\n                }, newConfirmSettings.cssAnimationDuration);\n            });\n            // ok button listener: end\n            // if ok callback && if ok callback a function => add Cancel Button listener: begin\n            if (typeof okButtonCallback === \"function\") {\n                // cancel button listener: begin\n                var cancelButton = window1.document.getElementById(\"NXConfirmButtonCancel\");\n                cancelButton.addEventListener(\"click\", function() {\n                    // if cancel callback && if cancel callback a function\n                    if (typeof cancelButtonCallback === \"function\") {\n                        if (confirmType === typesConfirm.Prompt && validationInput) theClientAnswer = validationInput.value || \"\";\n                        cancelButtonCallback(theClientAnswer);\n                    }\n                    confirmCloseWrap.classList.add(\"nx-remove\");\n                    var timeout = setTimeout(function() {\n                        if (confirmCloseWrap.parentNode !== null) {\n                            confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n                            clearTimeout(timeout);\n                        }\n                    }, newConfirmSettings.cssAnimationDuration);\n                });\n            // cancel button listener: end\n            }\n        // if ok callback && if ok callback a function => add Cancel Button listener: end\n        // buttons && input listener: end\n        }\n        // if there is no confirm box: end\n        // extend new settings with the backup settings\n        newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\n    };\n    // CONFIRM: Create: end\n    var Notiflix = {\n        Confirm: {\n            // Init\n            init: function(userConfirmOptions) {\n                // extend options\n                newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions);\n                // internal css if exist\n                commonSetInternalCSSCodes(confirmGetInternalCSSCodes, \"NotiflixConfirmInternalCSS\");\n            },\n            // Merge First Init\n            merge: function(userConfirmExtendOptions) {\n                // if initialized already\n                if (newConfirmSettings) newConfirmSettings = commonExtendOptions(true, newConfirmSettings, userConfirmExtendOptions);\n                else {\n                    commonConsoleError(\"You have to initialize the Confirm module before call Merge function.\");\n                    return false;\n                }\n            },\n            // Show\n            show: function(title, message, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n                confirmCreate(typesConfirm.Show, title, message, null, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n            },\n            // Ask\n            ask: function(title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n                confirmCreate(typesConfirm.Ask, title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n            },\n            // Prompt\n            prompt: function(title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n                confirmCreate(typesConfirm.Prompt, title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n            }\n        }\n    };\n    if (typeof window1.Notiflix === \"object\") return commonExtendOptions(true, window1.Notiflix, {\n        Confirm: Notiflix.Confirm\n    });\n    else return {\n        Confirm: Notiflix.Confirm\n    };\n});\n\n\nconst $47d4ff9957288465$var$delayInputEl = document.querySelector('[name=\"delay\"]');\nconst $47d4ff9957288465$var$stepInputEl = document.querySelector('[name=\"step\"]');\nconst $47d4ff9957288465$var$amountInputEl = document.querySelector('[name=\"amount\"]');\nconst $47d4ff9957288465$var$formEl = document.querySelector(\".form\");\nconst $47d4ff9957288465$var$btnStart = document.querySelector('button[type=\"submit\"]');\nconst $47d4ff9957288465$var$shouldResolve = Math.random() > 0.3;\nlet $47d4ff9957288465$var$timerId = null;\nlet $47d4ff9957288465$var$count = 0;\nlet $47d4ff9957288465$var$timeDelay = 0;\nlet $47d4ff9957288465$var$counterAmount = 0;\nconst $47d4ff9957288465$var$btnNone = ()=>{\n    $47d4ff9957288465$var$btnStart.style.opacity = 0.5;\n    $47d4ff9957288465$var$btnStart.style.pointerEvents = \"none\";\n};\nconst $47d4ff9957288465$var$btnAuto = ()=>{\n    $47d4ff9957288465$var$btnStart.style.pointerEvents = \"auto\";\n    $47d4ff9957288465$var$btnStart.style.opacity = 1;\n};\nfunction $47d4ff9957288465$var$createPromise(position, initialDelay, subsequentDelay) {\n    return new Promise((resolve, reject)=>{\n        $47d4ff9957288465$var$timeDelay = initialDelay;\n        $47d4ff9957288465$var$counterAmount = 1;\n        function finallyDesition() {\n            if ($47d4ff9957288465$var$count !== 0) $47d4ff9957288465$var$timerId = setInterval(()=>{\n                const shouldResolve = Math.random() > 0.3;\n                $47d4ff9957288465$var$counterAmount += 1;\n                $47d4ff9957288465$var$timeDelay = +$47d4ff9957288465$var$timeDelay + +subsequentDelay;\n                if (shouldResolve) {\n                    (0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Notify.failure(`❌ Rejected promise ${$47d4ff9957288465$var$counterAmount} in ${$47d4ff9957288465$var$timeDelay}ms`);\n                    console.log(`виклик зробився за такий час ${$47d4ff9957288465$var$timeDelay}`);\n                } else {\n                    (0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Notify.success(`✅ Fulfilled promise ${$47d4ff9957288465$var$counterAmount} in ${$47d4ff9957288465$var$timeDelay}ms`);\n                    console.log(`виклик зробився за такий час ${$47d4ff9957288465$var$timeDelay}`);\n                }\n                $47d4ff9957288465$var$count += 1;\n                if ($47d4ff9957288465$var$count >= position) {\n                    $47d4ff9957288465$var$count = 0;\n                    $47d4ff9957288465$var$formEl.reset();\n                    $47d4ff9957288465$var$btnAuto();\n                    clearInterval($47d4ff9957288465$var$timerId);\n                }\n            }, subsequentDelay);\n        }\n        function intervalFunction() {\n            if ($47d4ff9957288465$var$count === 0) setTimeout(()=>{\n                const shouldResolve = Math.random() > 0.3;\n                $47d4ff9957288465$var$count += 1;\n                if (shouldResolve) {\n                    (0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Notify.success(`✅ Fulfilled promise ${$47d4ff9957288465$var$counterAmount} in ${initialDelay}ms`);\n                    console.log(`виклик зробився за такий час ${initialDelay}`);\n                    finallyDesition();\n                    resolve(\"To praca!\");\n                } else {\n                    (0, (/*@__PURE__*/$parcel$interopDefault($7Y9D8))).Notify.failure(`❌ Rejected promise ${$47d4ff9957288465$var$counterAmount} in ${initialDelay}ms`);\n                    console.log(`виклик зробився за такий час ${initialDelay}`);\n                    finallyDesition();\n                    reject(\"To NE praca!\");\n                }\n            }, initialDelay);\n        }\n        intervalFunction();\n    });\n}\n$47d4ff9957288465$var$formEl.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    $47d4ff9957288465$var$btnNone();\n    const amountStep = $47d4ff9957288465$var$amountInputEl.value;\n    const initialDelay = $47d4ff9957288465$var$delayInputEl.value;\n    const subsequentDelay = $47d4ff9957288465$var$stepInputEl.value;\n    $47d4ff9957288465$var$createPromise(amountStep, initialDelay, subsequentDelay).then((result)=>{\n        console.log(\"Promise resolved:\", result);\n    }).catch((error)=>{\n        console.log(\"Promise rejected:\", error);\n    });\n});\nconsole.log();\n\n\n//# sourceMappingURL=03-promises.e453e922.js.map\n","import Notiflix from 'notiflix';\nimport flatpickr from \"flatpickr\";\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\n\nconst delayInputEl = document.querySelector('[name=\"delay\"]');\nconst stepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\nconst formEl = document.querySelector('.form');\nconst btnStart = document.querySelector('button[type=\"submit\"]');\nconst shouldResolve = Math.random() > 0.3;\nlet timerId = null;\nlet count = 0;\nlet timeDelay = 0;\nlet counterAmount = 0;\n\nconst btnNone = () => {\n    btnStart.style.opacity = 0.5;\n    btnStart.style.pointerEvents = 'none';\n};\n\nconst btnAuto = () => {\n    btnStart.style.pointerEvents = 'auto';\n    btnStart.style.opacity = 1;\n};\n\n\nfunction createPromise(position, initialDelay, subsequentDelay) {\n    return new Promise((resolve, reject) => {\n        timeDelay = initialDelay;\n        counterAmount = 1\n        function finallyDesition() {\n            if (count !== 0) {\n                timerId = setInterval(() => {\n                    const shouldResolve = Math.random() > 0.3;\n\n                    counterAmount += 1\n                    timeDelay = +timeDelay + +subsequentDelay;\n                    if (shouldResolve) {\n                        Notiflix.Notify.failure(\n                            `❌ Rejected promise ${counterAmount} in ${timeDelay}ms`\n                        );\n                        console.log(`виклик зробився за такий час ${timeDelay}`)\n                    } else {\n                        Notiflix.Notify.success(\n                            `✅ Fulfilled promise ${counterAmount} in ${timeDelay}ms`\n                        );\n                        console.log(`виклик зробився за такий час ${timeDelay}`)\n                    }\n                    count += 1;\n                    if (count >= position) {\n                        count = 0;\n                        formEl.reset();\n                        btnAuto()\n                        clearInterval(timerId);\n                    }\n                }, subsequentDelay)\n            }\n        }\n\n\n        function intervalFunction() {\n            if (count === 0) {\n                setTimeout(() => {\n                    const shouldResolve = Math.random() > 0.3;\n\n                    count += 1;\n                    if (shouldResolve) {\n                        Notiflix.Notify.success(\n                            `✅ Fulfilled promise ${counterAmount} in ${initialDelay}ms`\n                        );\n                        console.log(`виклик зробився за такий час ${initialDelay}`)\n                        finallyDesition()\n                        resolve('To praca!');\n                    } else {\n                        Notiflix.Notify.failure(\n                            `❌ Rejected promise ${counterAmount} in ${initialDelay}ms`\n                        );\n                        console.log(`виклик зробився за такий час ${initialDelay}`)\n                        finallyDesition()\n                        reject('To NE praca!');\n                    }\n                }, initialDelay)\n            }\n        }\n        intervalFunction()\n    });\n}\n\nformEl.addEventListener('submit', (event) => {\n    event.preventDefault();\n    btnNone()\n    const amountStep = amountInputEl.value;\n    const initialDelay = delayInputEl.value;\n    const subsequentDelay = stepInputEl.value;\n\n    createPromise(amountStep, initialDelay, subsequentDelay)\n        .then((result) => {\n            console.log('Promise resolved:', result);\n        })\n        .catch((error) => {\n            console.log('Promise rejected:', error);\n        })\n});\n\nconsole.log()","/*\n* Notiflix Confirm AIO (https://notiflix.github.io)\n* Description: This file has been created automatically that using \"notiflix.js\", and \"notiflix.css\" files.\n* Version: 3.2.6\n* Author: Furkan (https://github.com/furcan)\n* Copyright 2019 - 2023 Notiflix, MIT Licence (https://opensource.org/licenses/MIT)\n*/\n\n/* global define */\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Notiflix = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  // COMMON: SSR check: begin\n  if (typeof window === 'undefined' && typeof window.document === 'undefined') {\n    return false;\n  }\n  // COMMON: SSR check: end\n\n  // COMMON: Variables: begin\n  var notiflixNamespace = 'Notiflix';\n  var notiflixConsoleDocs = '\\n\\nVisit documentation page to learn more: https://notiflix.github.io/documentation';\n  var defaultFontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif';\n  // COMMON: Variables: end\n\n  // CONFIRM: Default Settings: begin\n  var typesConfirm = {\n    Show: 'Show',\n    Ask: 'Ask',\n    Prompt: 'Prompt',\n  };\n  var newConfirmSettings;\n  var confirmSettings = {\n    ID: 'NotiflixConfirmWrap', // can not customizable\n    className: 'notiflix-confirm',\n    width: '300px',\n    zindex: 4003,\n    position: 'center', // 'center' - 'center-top' - 'center-bottom' - 'right-top' - 'right-center' - 'right-bottom' - 'left-top' - 'left-center' - 'left-bottom'\n    distance: '10px',\n    backgroundColor: '#f8f8f8',\n    borderRadius: '25px',\n    backOverlay: true,\n    backOverlayColor: 'rgba(0,0,0,0.5)',\n    rtl: false,\n    fontFamily: 'Quicksand',\n    cssAnimation: true,\n    cssAnimationDuration: 300,\n    cssAnimationStyle: 'fade', // 'zoom' - 'fade'\n    plainText: true,\n\n    titleColor: '#32c682',\n    titleFontSize: '16px',\n    titleMaxLength: 34,\n\n    messageColor: '#1e1e1e',\n    messageFontSize: '14px',\n    messageMaxLength: 110,\n\n    buttonsFontSize: '15px',\n    buttonsMaxLength: 34,\n    okButtonColor: '#f8f8f8',\n    okButtonBackground: '#32c682',\n    cancelButtonColor: '#f8f8f8',\n    cancelButtonBackground: '#a9a9a9',\n  };\n  // CONFIRM: Default Settings: end\n\n  // COMMON: Console Error: begin\n  var commonConsoleError = function (message) {\n    return console.error('%c ' + notiflixNamespace + ' Error ', 'padding:2px;border-radius:20px;color:#fff;background:#ff5549', '\\n' + message + notiflixConsoleDocs);\n  };\n  // COMMON: Console Error: end\n\n  // COMMON: Check Head or Body: begin\n  var commonCheckHeadOrBody = function (element) {\n    if (!element) { element = 'head'; }\n    if (window.document[element] === null) {\n      commonConsoleError('\\nNotiflix needs to be appended to the \"<' + element + '>\" element, but you called it before the \"<' + element + '>\" element has been created.');\n      return false;\n    }\n    return true;\n  };\n  // COMMON: Check Head or Body: end\n\n  // COMMON: Set Internal CSS Codes: begin\n  var commonSetInternalCSSCodes = function (getInternalCSSCodes, styleElementId) {\n    // check doc head\n    if (!commonCheckHeadOrBody('head')) { return false; }\n\n    // internal css\n    if (getInternalCSSCodes() !== null && !window.document.getElementById(styleElementId)) {\n      var internalCSS = window.document.createElement('style');\n      internalCSS.id = styleElementId;\n      internalCSS.innerHTML = getInternalCSSCodes();\n      window.document.head.appendChild(internalCSS);\n    }\n  };\n  // COMMON: Set Internal CSS Codes: end\n\n  // COMMON: Extend Options: begin\n  var commonExtendOptions = function () {\n    // variables\n    var extended = {};\n    var deep = false;\n    var i = 0;\n    // check if a deep merge\n    if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n      deep = arguments[0];\n      i++;\n    }\n    // merge the object into the extended object\n    var merge = function (obj) {\n      for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n          // if property is an object, merge properties\n          if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n            extended[prop] = commonExtendOptions(extended[prop], obj[prop]);\n          } else {\n            extended[prop] = obj[prop];\n          }\n        }\n      }\n    };\n    // loop through each object and conduct a merge\n    for (; i < arguments.length; i++) {\n      merge(arguments[i]);\n    }\n    return extended;\n  };\n  // COMMON: Extend Options: end\n\n  // COMMON: Get Plaintext: begin\n  var commonGetPlaintext = function (html) {\n    var htmlPool = window.document.createElement('div');\n    htmlPool.innerHTML = html;\n    return htmlPool.textContent || htmlPool.innerText || '';\n  };\n  // COMMON: Get Plaintext: end\n\n  // CONFIRM: Get Internal CSS Codes: begin\n  var confirmGetInternalCSSCodes = function () {\n    var confirmCSS = '[id^=NotiflixConfirmWrap]{position:fixed;z-index:4003;width:100%;height:100%;left:0;top:0;padding:10px;-webkit-box-sizing:border-box;box-sizing:border-box;background:transparent;font-family:\"Quicksand\",-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}[id^=NotiflixConfirmWrap].nx-position-center-top{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-center-bottom{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-left-top{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-center{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}[id^=NotiflixConfirmWrap].nx-position-left-bottom{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-top{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}[id^=NotiflixConfirmWrap].nx-position-right-center{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}[id^=NotiflixConfirmWrap].nx-position-right-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}[id^=NotiflixConfirmWrap] *{-webkit-box-sizing:border-box;box-sizing:border-box}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"]{width:100%;height:100%;left:0;top:0;background:rgba(255,255,255,.5);position:fixed;z-index:0}[id^=NotiflixConfirmWrap]>div[class*=\"-overlay\"].nx-with-animation{-webkit-animation:confirm-overlay-animation .3s ease-in-out 0s normal;animation:confirm-overlay-animation .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}@keyframes confirm-overlay-animation{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-remove>div[class*=\"-overlay\"].nx-with-animation{opacity:0;-webkit-animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal;animation:confirm-overlay-animation-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-overlay-animation-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]{width:300px;max-width:100%;max-height:96vh;overflow-x:hidden;overflow-y:auto;border-radius:25px;padding:10px;margin:0;-webkit-filter:drop-shadow(0 0 5px rgba(0,0,0,0.05));filter:drop-shadow(0 0 5px rgba(0, 0, 0, .05));background:#f8f8f8;color:#1e1e1e;position:relative;z-index:1;text-align:center}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar{width:0;height:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-thumb{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]::-webkit-scrollbar-track{background:transparent}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]{float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>h5{float:left;width:100%;margin:0;padding:0 0 10px;border-bottom:1px solid rgba(0,0,0,.1);color:#32c682;font-family:inherit!important;font-size:16px;line-height:1.4;font-weight:500;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div{font-family:inherit!important;margin:15px 0 20px;padding:0 10px;float:left;width:100%;font-size:14px;line-height:1.4;font-weight:normal;color:inherit;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div{font-family:inherit!important;float:left;width:100%;margin:15px 0 0;padding:0}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{font-family:inherit!important;float:left;width:100%;height:40px;margin:0;padding:0 15px;border:1px solid rgba(0,0,0,.1);border-radius:25px;font-size:14px;font-weight:normal;line-height:1;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;text-align:left}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input{text-align:right}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:hover{border-color:rgba(0,0,0,.1)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input:focus{border-color:rgba(0,0,0,.3)}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-failure{border-color:#ff5549}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-head\"]>div>div>input.nx-validation-success{border-color:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:inherit;float:left;width:100%;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{cursor:pointer;font-family:inherit!important;-webkit-transition:all .25s ease-in-out;-o-transition:all .25s ease-in-out;transition:all .25s ease-in-out;float:left;width:48%;padding:9px 5px;border-radius:inherit!important;font-weight:500;font-size:15px;line-height:1.4;color:#f8f8f8;text-align:inherit}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-ok{margin:0 2% 0 0;background:#32c682}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-confirm-button-cancel{margin:0 0 0 2%;background:#a9a9a9}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a.nx-full{margin:0;width:100%}[id^=NotiflixConfirmWrap]>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a:hover{-webkit-box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25);box-shadow:inset 0 -60px 5px -5px rgba(0,0,0,.25)}[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"],[id^=NotiflixConfirmWrap].nx-rtl-on>div[class*=\"-content\"]>div[class*=\"-buttons\"]>a{-webkit-transform:rotateY(180deg);transform:rotateY(180deg)}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade>div[class*=\"-content\"]{-webkit-animation:confirm-animation-fade .3s ease-in-out 0s normal;animation:confirm-animation-fade .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}@keyframes confirm-animation-fade{0%{opacity:0}100%{opacity:1}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom>div[class*=\"-content\"]{-webkit-animation:confirm-animation-zoom .3s ease-in-out 0s normal;animation:confirm-animation-zoom .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}@keyframes confirm-animation-zoom{0%{opacity:0;-webkit-transform:scale(.5);transform:scale(.5)}50%{opacity:1;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-fade.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-fade-remove .3s ease-in-out 0s normal;animation:confirm-animation-fade-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}@keyframes confirm-animation-fade-remove{0%{opacity:1}100%{opacity:0}}[id^=NotiflixConfirmWrap].nx-with-animation.nx-zoom.nx-remove>div[class*=\"-content\"]{opacity:0;-webkit-animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal;animation:confirm-animation-zoom-remove .3s ease-in-out 0s normal}@-webkit-keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}@keyframes confirm-animation-zoom-remove{0%{opacity:1;-webkit-transform:scale(1);transform:scale(1)}50%{opacity:.5;-webkit-transform:scale(1.05);transform:scale(1.05)}100%{opacity:0;-webkit-transform:scale(0);transform:scale(0)}}';\n    return confirmCSS || null;\n  };\n  // CONFIRM: Get Internal CSS Codes: end\n\n  // CONFIRM: Create: begin\n  var confirmCreate = function (confirmType, title, messageOrQuestion, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n    // check doc body\n    if (!commonCheckHeadOrBody('body')) { return false; }\n\n    // if not initialized pretend like init\n    if (!newConfirmSettings) {\n      Notiflix.Confirm.init({});\n    }\n\n    // create a backup for new settings\n    var newConfirmSettingsBackup = commonExtendOptions(true, newConfirmSettings, {});\n\n    // check the \"options\": begin\n    if (typeof options === 'object' && !Array.isArray(options)) {\n      // extend new settings with the new options\n      newConfirmSettings = commonExtendOptions(true, newConfirmSettings, options);\n    }\n    // check the \"options\": end\n\n    // check the arguments: begin\n    if (typeof title !== 'string') { title = 'Notiflix Confirm'; }\n    if (typeof messageOrQuestion !== 'string') { messageOrQuestion = 'Do you agree with me?'; }\n    if (typeof okButtonText !== 'string') { okButtonText = 'Yes'; }\n    if (typeof cancelButtonText !== 'string') { cancelButtonText = 'No'; }\n    if (typeof okButtonCallback !== 'function') { okButtonCallback = undefined; }\n    if (typeof cancelButtonCallback !== 'function') { cancelButtonCallback = undefined; }\n    // check the arguments: end\n\n    // if plainText is true => HTML tags not allowed: begin\n    if (newConfirmSettings.plainText) {\n      title = commonGetPlaintext(title);\n      messageOrQuestion = commonGetPlaintext(messageOrQuestion);\n      okButtonText = commonGetPlaintext(okButtonText);\n      cancelButtonText = commonGetPlaintext(cancelButtonText);\n    }\n    // if plainText is true => HTML tags not allowed: end\n\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: begin\n    if (!newConfirmSettings.plainText) {\n      if (title.length > newConfirmSettings.titleMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the title content length is more than \"titleMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n      if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the message content length is more than \"messageMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n      if ((okButtonText.length || cancelButtonText.length) > newConfirmSettings.buttonsMaxLength) {\n        title = 'Possible HTML Tags Error';\n        messageOrQuestion = 'The \"plainText\" option is \"false\" and the buttons content length is more than \"buttonsMaxLength\" option.';\n        okButtonText = 'Okay';\n        cancelButtonText = '...';\n      }\n    }\n    // if plainText is false but the contents length more than ***MaxLength => Possible HTML tags error: end\n\n    // max length: begin\n    if (title.length > newConfirmSettings.titleMaxLength) {\n      title = title.substring(0, newConfirmSettings.titleMaxLength) + '...';\n    }\n    if (messageOrQuestion.length > newConfirmSettings.messageMaxLength) {\n      messageOrQuestion = messageOrQuestion.substring(0, newConfirmSettings.messageMaxLength) + '...';\n    }\n    if (okButtonText.length > newConfirmSettings.buttonsMaxLength) {\n      okButtonText = okButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\n    }\n    if (cancelButtonText.length > newConfirmSettings.buttonsMaxLength) {\n      cancelButtonText = cancelButtonText.substring(0, newConfirmSettings.buttonsMaxLength) + '...';\n    }\n    // max length: end\n\n    // if cssAnimaion is false => duration: begin\n    if (!newConfirmSettings.cssAnimation) {\n      newConfirmSettings.cssAnimationDuration = 0;\n    }\n    // if cssAnimaion is false => duration: end\n\n    // confirm wrap: begin\n    var ntflxConfirmWrap = window.document.createElement('div');\n    ntflxConfirmWrap.id = confirmSettings.ID;\n    ntflxConfirmWrap.className = newConfirmSettings.className + (newConfirmSettings.cssAnimation ? ' nx-with-animation nx-' + newConfirmSettings.cssAnimationStyle : '');\n    ntflxConfirmWrap.style.zIndex = newConfirmSettings.zindex;\n    ntflxConfirmWrap.style.padding = newConfirmSettings.distance;\n\n    // rtl: begin\n    if (newConfirmSettings.rtl) {\n      ntflxConfirmWrap.setAttribute('dir', 'rtl');\n      ntflxConfirmWrap.classList.add('nx-rtl-on');\n    }\n    // rtl: end\n\n    // position: begin\n    var confirmPosition = typeof newConfirmSettings.position === 'string' ? newConfirmSettings.position.trim() : 'center';\n    ntflxConfirmWrap.classList.add('nx-position-' + confirmPosition);\n    // position: end\n\n    // font-family\n    ntflxConfirmWrap.style.fontFamily = '\"' + newConfirmSettings.fontFamily + '\", ' + defaultFontFamily;\n\n    // if background overlay is true: begin\n    var confirmOverlay = '';\n    if (newConfirmSettings.backOverlay) {\n      confirmOverlay = '<div class=\"' + newConfirmSettings.className + '-overlay' + (newConfirmSettings.cssAnimation ? ' nx-with-animation' : '') + '\" style=\"background:' + newConfirmSettings.backOverlayColor + ';animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms;\"></div>';\n    }\n    // if background overlay is true: end\n\n    // if have a callback => add cancel button: begin\n    var cancelButtonHTML = '';\n    if (typeof okButtonCallback === 'function') {\n      cancelButtonHTML = '<a id=\"NXConfirmButtonCancel\" class=\"nx-confirm-button-cancel\" style=\"color:' + newConfirmSettings.cancelButtonColor + ';background:' + newConfirmSettings.cancelButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + cancelButtonText + '</a>';\n    }\n    // if have a callback => add cancel button: end\n\n    // check the validation module: begin\n    var setValidationInput = '';\n    var theExpectedAnswer = null;\n    var theClientAnswer = undefined;\n    if (confirmType === typesConfirm.Ask || confirmType === typesConfirm.Prompt) {\n      theExpectedAnswer = answer || '';\n      var inputMaxLength = (confirmType === typesConfirm.Ask) ? Math.ceil(theExpectedAnswer.length * 1.5) : (theExpectedAnswer.length > 200 ? Math.ceil(theExpectedAnswer.length * 1.5) : 250);\n      var inputDefaultValueAttr = confirmType === typesConfirm.Prompt ? ('value=\"' + theExpectedAnswer + '\"') : '';\n      setValidationInput = '<div><input id=\"NXConfirmValidationInput\" type=\"text\" ' + inputDefaultValueAttr + ' maxlength=\"' + inputMaxLength + '\" style=\"font-size:' + newConfirmSettings.messageFontSize + ';border-radius: ' + newConfirmSettings.borderRadius + ';\" autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"none\" /></div>';\n    }\n    // check the validation module: end\n\n    // confirm wrap content: begin\n    ntflxConfirmWrap.innerHTML = confirmOverlay +\n      '<div class=\"' + newConfirmSettings.className + '-content\" style=\"width:' + newConfirmSettings.width + '; background:' + newConfirmSettings.backgroundColor + '; animation-duration:' + newConfirmSettings.cssAnimationDuration + 'ms; border-radius: ' + newConfirmSettings.borderRadius + ';\">' +\n      '<div class=\"' + newConfirmSettings.className + '-head\">' +\n      '<h5 style=\"color:' + newConfirmSettings.titleColor + ';font-size:' + newConfirmSettings.titleFontSize + ';\">' + title + '</h5>' +\n      '<div style=\"color:' + newConfirmSettings.messageColor + ';font-size:' + newConfirmSettings.messageFontSize + ';\">' + messageOrQuestion + setValidationInput + '</div>' +\n      '</div>' +\n      '<div class=\"' + newConfirmSettings.className + '-buttons\">' +\n      '<a id=\"NXConfirmButtonOk\" class=\"nx-confirm-button-ok' + (typeof okButtonCallback === 'function' ? '' : ' nx-full') + '\" style=\"color:' + newConfirmSettings.okButtonColor + ';background:' + newConfirmSettings.okButtonBackground + ';font-size:' + newConfirmSettings.buttonsFontSize + ';\">' + okButtonText + '</a>' +\n      cancelButtonHTML +\n      '</div>' +\n      '</div>';\n    // confirm wrap content: end\n    // confirm wrap: end\n\n    // if there is no confirm box: begin\n    if (!window.document.getElementById(ntflxConfirmWrap.id)) {\n      window.document.body.appendChild(ntflxConfirmWrap);\n\n      // buttons && input listener: begin\n      var confirmCloseWrap = window.document.getElementById(ntflxConfirmWrap.id);\n      var okButton = window.document.getElementById('NXConfirmButtonOk');\n\n      // validation input listener: begin\n      var validationInput = window.document.getElementById('NXConfirmValidationInput');\n      if (validationInput) {\n        validationInput.focus();\n        validationInput.setSelectionRange(0, (validationInput.value || '').length);\n        validationInput.addEventListener('keyup', function (event) {\n          var thisValue = event.target.value;\n          if (\n            (confirmType === typesConfirm.Ask) &&\n            (thisValue !== theExpectedAnswer)\n          ) {\n            event.preventDefault();\n            validationInput.classList.add('nx-validation-failure');\n            validationInput.classList.remove('nx-validation-success');\n          } else {\n            if (confirmType === typesConfirm.Ask) {\n              validationInput.classList.remove('nx-validation-failure');\n              validationInput.classList.add('nx-validation-success');\n            }\n            var isEnter = (event.key || '').toLocaleLowerCase('en') === 'enter' || event.keyCode === 13;\n            if (isEnter) {\n              okButton.dispatchEvent(new Event('click'));\n            }\n          }\n        });\n      }\n      // validation input listener: end\n\n      // ok button listener: begin\n      okButton.addEventListener('click', function (event) {\n        // check the answer if the type is \"Ask\": begin\n        if (confirmType === typesConfirm.Ask && theExpectedAnswer && validationInput) {\n          var inputValue = (validationInput.value || '').toString();\n          if (inputValue !== theExpectedAnswer) {\n            validationInput.focus();\n            validationInput.classList.add('nx-validation-failure');\n            event.stopPropagation();\n            event.preventDefault();\n            event.returnValue = false;\n            event.cancelBubble = true;\n            return false;\n          } else {\n            validationInput.classList.remove('nx-validation-failure');\n          }\n        }\n        // check the answer if the type is \"Ask\": end\n\n        // if ok callback && if ok callback is a function\n        if (typeof okButtonCallback === 'function') {\n          if (confirmType === typesConfirm.Prompt && validationInput) {\n            theClientAnswer = validationInput.value || '';\n          }\n          okButtonCallback(theClientAnswer);\n        }\n        confirmCloseWrap.classList.add('nx-remove');\n\n        var timeout = setTimeout(function () {\n          if (confirmCloseWrap.parentNode !== null) {\n            confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n            clearTimeout(timeout);\n          }\n        }, newConfirmSettings.cssAnimationDuration);\n      });\n      // ok button listener: end\n\n      // if ok callback && if ok callback a function => add Cancel Button listener: begin\n      if (typeof okButtonCallback === 'function') {\n        // cancel button listener: begin\n        var cancelButton = window.document.getElementById('NXConfirmButtonCancel');\n        cancelButton.addEventListener('click', function () {\n          // if cancel callback && if cancel callback a function\n          if (typeof cancelButtonCallback === 'function') {\n            if (confirmType === typesConfirm.Prompt && validationInput) {\n              theClientAnswer = validationInput.value || '';\n            }\n            cancelButtonCallback(theClientAnswer);\n          }\n          confirmCloseWrap.classList.add('nx-remove');\n\n          var timeout = setTimeout(function () {\n            if (confirmCloseWrap.parentNode !== null) {\n              confirmCloseWrap.parentNode.removeChild(confirmCloseWrap);\n              clearTimeout(timeout);\n            }\n          }, newConfirmSettings.cssAnimationDuration);\n        });\n        // cancel button listener: end\n      }\n      // if ok callback && if ok callback a function => add Cancel Button listener: end\n      // buttons && input listener: end\n    }\n    // if there is no confirm box: end\n\n    // extend new settings with the backup settings\n    newConfirmSettings = commonExtendOptions(true, newConfirmSettings, newConfirmSettingsBackup);\n  };\n  // CONFIRM: Create: end\n\n  var Notiflix = {\n    Confirm: {\n      // Init\n      init: function (userConfirmOptions) {\n        // extend options\n        newConfirmSettings = commonExtendOptions(true, confirmSettings, userConfirmOptions);\n        // internal css if exist\n        commonSetInternalCSSCodes(confirmGetInternalCSSCodes, 'NotiflixConfirmInternalCSS');\n      },\n      // Merge First Init\n      merge: function (userConfirmExtendOptions) {\n        // if initialized already\n        if (newConfirmSettings) {\n          newConfirmSettings = commonExtendOptions(true, newConfirmSettings, userConfirmExtendOptions);\n        }\n        // initialize first\n        else {\n          commonConsoleError('You have to initialize the Confirm module before call Merge function.');\n          return false;\n        }\n      },\n      // Show\n      show: function (title, message, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Show, title, message, null, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n      // Ask\n      ask: function (title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Ask, title, question, answer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n      // Prompt\n      prompt: function (title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options) {\n        confirmCreate(typesConfirm.Prompt, title, question, defaultAnswer, okButtonText, cancelButtonText, okButtonCallback, cancelButtonCallback, options);\n      },\n    },\n  };\n\n  if (typeof window.Notiflix === 'object') {\n    return commonExtendOptions(true, window.Notiflix, { Confirm: Notiflix.Confirm });\n  } else {\n    return { Confirm: Notiflix.Confirm };\n  }\n\n});"],"names":["$parcel$interopDefault","a","__esModule","default","root","factory","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$7Y9D8","$8371a8bef07b3531$exports","window1","document","newConfirmSettings","typesConfirm","Show","Ask","Prompt","confirmSettings","ID","className","width","zindex","position","distance","backgroundColor","borderRadius","backOverlay","backOverlayColor","rtl","fontFamily","cssAnimation","cssAnimationDuration","cssAnimationStyle","plainText","titleColor","titleFontSize","titleMaxLength","messageColor","messageFontSize","messageMaxLength","buttonsFontSize","buttonsMaxLength","okButtonColor","okButtonBackground","cancelButtonColor","cancelButtonBackground","commonConsoleError","message","console","error","commonCheckHeadOrBody","element","commonSetInternalCSSCodes","getInternalCSSCodes","styleElementId","getElementById","internalCSS","createElement","innerHTML","head","appendChild","commonExtendOptions","extended","deep","i","Object","prototype","toString","arguments","length","merge","obj","prop","hasOwnProperty","commonGetPlaintext","html","htmlPool","textContent","innerText","confirmGetInternalCSSCodes","confirmCreate","confirmType","title","messageOrQuestion","answer","okButtonText","cancelButtonText","okButtonCallback","cancelButtonCallback","options","Notiflix","Confirm","newConfirmSettingsBackup","Array","isArray","undefined","substring","ntflxConfirmWrap","style","zIndex","padding","setAttribute","classList","add","confirmPosition","trim","confirmOverlay","cancelButtonHTML","setValidationInput","theExpectedAnswer","theClientAnswer","inputMaxLength","Math","ceil","body","confirmCloseWrap","okButton","validationInput","focus","setSelectionRange","value","addEventListener","event","thisValue","target","preventDefault","remove","key","toLocaleLowerCase","keyCode","dispatchEvent","Event","inputValue","stopPropagation","returnValue","cancelBubble","timeout","setTimeout","parentNode","removeChild","clearTimeout","cancelButton","userConfirmOptions","userConfirmExtendOptions","show","ask","question","prompt","defaultAnswer","define","amd","$47d4ff9957288465$var$delayInputEl","querySelector","$47d4ff9957288465$var$stepInputEl","$47d4ff9957288465$var$amountInputEl","$47d4ff9957288465$var$formEl","$47d4ff9957288465$var$btnStart","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$count","$47d4ff9957288465$var$timeDelay","$47d4ff9957288465$var$counterAmount","$47d4ff9957288465$var$btnNone","opacity","pointerEvents","$47d4ff9957288465$var$btnAuto","amountStep","initialDelay","subsequentDelay","$47d4ff9957288465$var$createPromise","Promise","resolve","reject","finallyDesition","setInterval","random","Notify","failure","success","log","reset","clearInterval","then","result","catch"],"version":3,"file":"03-promises.e453e922.js.map"}